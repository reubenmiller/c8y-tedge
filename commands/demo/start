#!/bin/sh
set -e

if [ "${DEBUG:-}" = 1 ]; then
    set -x
fi

usage() {
    cat <<EOT >&2
Start a new tedge-container-demo instance

It will download the latest docker-compose from the https://github.com/thin-edge/tedge-demo-container repository
and bootstrap it using your current go-c8y-cli session.

c8y tedge demo start <DEVICE_NAME>

FLAGS

    --skip-download         Skip downloading of the docker-compose.yaml file if it already exists.
                            Useful if you're manually editing the docker-compose.yaml for dev purposes

Examples

  c8y tedge demo start mydevice001
  # Start a tedge-container-demo using the device name 'mydevice001'

EOT
}

fail() {
    echo "ERROR: $*" >&2
    exit 1
}

FORCE_DOWNLOAD_COMPOSE=1

while [ $# -gt 0 ]; do
    case "$1" in
        --help|-h)
            usage
            exit 0
            ;;
        --skip-download)
            FORCE_DOWNLOAD_COMPOSE=0
            shift
            ;;
        *)
            break
            ;;
    esac
done

if [ $# -lt 1 ]; then
    fail "Missing device name (aka project name)"
fi
NAME="$1"
shift

COMPOSE_URL="https://raw.githubusercontent.com/thin-edge/tedge-demo-container/main/demos/docker-compose/device/docker-compose.yaml"
PROJECT_DIR="$HOME/.tedge/tedge-demo-container/$NAME"
export COMPOSE_FILE="$PROJECT_DIR/docker-compose.yaml"

echo "Creating demo folder: $PROJECT_DIR" >&2
mkdir -p "$PROJECT_DIR"

if [ "$FORCE_DOWNLOAD_COMPOSE" = 1 ] || [ ! -f "$COMPOSE_FILE" ]; then
    echo "Downloading the docker-compose.yaml file" >&2
    if command -V wget >/dev/null 2>&1; then
        wget -q -O - "$COMPOSE_URL" > "$COMPOSE_FILE"
    elif command -V curl >/dev/null 2>&1; then
        curl -LSs "$COMPOSE_URL" > "$COMPOSE_FILE"
    else
        fail "Missing required dependencies: Either curl or wget is needed"
    fi
fi

echo "Running docker compose up -d" >&2
(cd "$PROJECT_DIR" && docker compose up -d)

echo "Bootstrapping" >&2
c8y tedge bootstrap-container tedge --device-id "$NAME" "$@"

# Create a default remoteaccess configuration but only if the user has the correct permissions
MO_ID=$(c8y identity get -n --name "$NAME" --select managedObject.id -o csv)
if [ -n "$MO_ID" ]; then
    # Check if the user had correct permissions to use remoteaccess
    if c8y remoteaccess configurations list -n --device "$MO_ID" --silentStatusCodes 403; then
        # Add webssh config if it is not already existing
        c8y remoteaccess configurations get -n --id webssh --device "$MO_ID" --silentStatusCodes 404 ||
            c8y remoteaccess configurations create-webssh \
                -n \
                --device "$MO_ID" \
                --name "webssh" \
                --credentialsType USER_PASS \
                --username iotadmin \
                --password iotadmin \
                --force >/dev/null
    else
        echo "Warning: We couldn't add the remote access configuration as you don't have the required permissions"
        echo "To fix this: Add the 'Remote Access' permission to a role like 'Admin' and assign yourself to it"
    fi
fi
